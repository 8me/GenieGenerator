<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
******************************************************************************************************
In this file, common physics parameters for the long-lived NHL simulation are defined.
Ideally, the user would come here to tweak parameters such as NHL mass and mixings as well as switch
on/off certain hooks such as Majorana nature, polarisation effects, etc.
It would also be interesting to set the interesting decays here (relevant in case a specific channel is
not specified in the arguments of the code itself, helps POT)

Author:
John Plows <komninos-john.plows \at physics.ox.ac.uk>
University of Oxford
April 11th, 2022
******************************************************************************************************
-->

<common_NHL_list>

  <param_set name="ParameterSpace">
    <param type="double" name="NHL-Mass"> 0.475 </param> <!-- GeV -->
    <param type="vec-double" name="NHL-LeptonMixing" delim=";"> 1.0e-7 ; 1.0e-7 ; 0.0 </param>
    <param type="double" name="NHL-Ue42"> 1.0e-7 </param>
    <param type="double" name="NHL-Um42"> 1.0e-7 </param>
    <param type="double" name="NHL-Ut42"> 0.0 </param>
    <param type="bool" name="NHL-Majorana"> false </param>
    <param type="int" name="NHL-Type"> REPLACE_TYPE </param> <!-- 0 = pure-N, 1 = pure-Nbar, 2 = mix -->
  </param_set>

  <param_set name="InterestingChannels">
    <!-- 2-body decays -->
    <param type="bool" name="NHL-2B_mu_pi"> false </param>
    <param type="bool" name="NHL-2B_e_pi"> true </param>
    <param type="bool" name="NHL-2B_nu_pi0"> false </param>
    <!-- 3-body decays -->
    <param type="bool" name="NHL-3B_nu_nu_nu"> false </param>
    <param type="bool" name="NHL-3B_nu_mu_mu"> false </param>
    <param type="bool" name="NHL-3B_nu_e_e"> false </param>
    <param type="bool" name="NHL-3B_nu_mu_e"> false </param>
    <param type="bool" name="NHL-3B_e_pi_pi0"> false </param>
    <param type="bool" name="NHL-3B_mu_pi_pi0"> false </param>
    <param type="bool" name="NHL-3B_nu_pi0_pi0"> false </param>
  </param_set>

  <param_set name="InitialState">
    <param type="double" name="NHL-angular_deviation"> 1.0 </param> <!-- deg -->
    <param type="vec-double" name="NHL-energy_range" delim=";"> 0.0 ; 20.0 </param> <!-- GeV -->
    <param type="double" name="NHL-max-energy"> 20.0 </param> <!-- GeV -->
  </param_set>

  <param_set name="CoordinateXForm">
    <param type="vec-double" name="Beam2User_T" delim=";"> -0.2486 ; -60.350 ; 1022.74 </param> <!-- m -->
    <param type="double" name="DetCentreXInBeam"> -0.2486 </param> <!-- unrotated -->
    <param type="double" name="DetCentreYInBeam"> -60.350 </param>
    <param type="double" name="DetCentreZInBeam"> 1022.74 </param>
    <param type="vec-double" name="Beam2User_R" delim=";"> 0.0 ; 0.0 ; -0.05830 </param> <!-- rad -->
    <param type="double" name="EulerExtrinsicX1"> 0.0 </param>
    <param type="double" name="EulerExtrinsicZ">  0.0 </param>
    <param type="double" name="EulerExtrinsicX2"> -0.05830 </param>
    <!-- Euler angles, extrinsic x-z-x = 1-2-3, RM * BEAM = USER, RM = Rx(1) * Rz(2) * Rx(3). -->
    <!-- Describes rotation of beam wrt target hall frame -->
    <!-- <param type="vec-double" name="Beam2Det_R" delim=";"> 0.0 ; 0.0 ; 0.0 </param> -->
    <param type="vec-double" name="Beam2Det_R" delim=";"> -1.570796 ; 0.785398 ; 1.570796 </param> <!-- rad -->
    <!-- Euler angles, extrinsic x-z-x -->
    <!-- Describes rotation of detector wrt target hall frame -->
    <param type="vec-double" name="DetCentre_User" delim=";"> 0.0 ; 0.0 ; 6.44 </param> <!-- m -->
    <!-- <param type="vec-double" name="DetCentre_User" delim=";"> 0.0 ; 0.0 ; 0.0 </param> --> <!-- m -->
    <!-- Position of detector centre in user frame, in case it is not at user origin -->
  </param_set>

  <param_set name="ParticleGun">
    <param type="double" name="PG-OriginX"> REPLACE_PGOX </param> <!-- user, m -->
    <param type="double" name="PG-OriginY"> REPLACE_PGOY </param> <!-- user, m -->
    <param type="double" name="PG-OriginZ"> REPLACE_PGOZ </param> <!-- user, m -->

    <param type="double" name="PG-OriginDX"> REPLACE_PGODX </param> <!-- user, m, >= 0 -->
    <param type="double" name="PG-OriginDY"> REPLACE_PGODY </param> <!-- user, m, >= 0 -->
    <param type="double" name="PG-OriginDZ"> REPLACE_PGODZ </param> <!-- user, m, >= 0 -->

    <param type="double" name="PG-cx"> REPLACE_PGCX </param> <!-- user, GeV/GeV -->
    <param type="double" name="PG-cy"> REPLACE_PGCY </param> <!-- user, GeV/GeV -->
    <param type="double" name="PG-cz"> REPLACE_PGCZ </param> <!-- user, GeV/GeV -->

    <param type="double" name="PG-DTheta"> REPLACE_PGDTHETA </param> <!-- deg, >= 0 -->
    <param type="double" name="PG-DPhi"> REPLACE_PGDPHI </param> <!-- deg, >= 0 -->

    <param type="double" name="PG-Energy"> REPLACE_PGENERGY </param> <!-- GeV -->
  </param_set>

  <param_set name="FluxCalc">
    <param type="vec-double" name="ParentPOTScalings" delim=";"> 1.0 ; 1.005 ; 9.353 ; 10.458 </param> <!-- All parents -> no muons -> no pions -> no K0L -->
    <param type="bool" name="CalcKaonFluxOnly"> false </param>
    <param type="bool" name="AttemptCharmCalculation"> false </param>
    <param type="bool" name="IsParentOnAxis"> true </param>
    <param type="vec-double" name="NHL-PolDir" delim=";"> 0.0 ; 0.0 ; 1.0 </param> 
  </param_set>

  <!--
      <param_set name="Hooks">
	  <param type="bool" name="UseRhos"> false </param> // for pi0+stuff in FS, use published decay width dominated by rho intermediate state. See the paper by Coloma et al.
          <param type="bool" name="IncludePolarisation"> false </param>
	  <param type="bool" name="WeightEventsUsingGeometry"> true </param>
	  <param type="bool" name="SampleDecayVtxFirst"> false </param>
	  <param type="bool" name="IncludeMultipleNHL"> false </param>
      </param_set>
  -->

  <param_set name="Validation">
    <!-- See $GENIE/src/Physics/NeutralHeavyLepton/NHL{Production,Decay}Mode.h for enum -->
    <param type="int" name="NHL-ProdMode">  0 </param>
    <param type="int" name="NHL-DecayMode"> 0 </param>

    <param type="double" name="BoxLx"> 1.0 </param> <!-- m -->
    <param type="double" name="BoxLy"> 1.0 </param> <!-- m -->
    <param type="double" name="BoxLz"> 1.0 </param> <!-- m -->

    <param type="double" name="Parent-E">     5.0 </param> <!-- GeV -->
    <param type="double" name="Parent-Theta"> 0.0 </param> <!-- wrt beam axis, rad -->
    <param type="double" name="Parent-Phi">   0.0 </param> <!-- 0 == x, pi/2 == y -->
    <param type="double" name="Parent-Ox">    0.0 </param> <!-- user, m -->
    <param type="double" name="Parent-Oy">    0.0 </param> <!-- user, m -->
    <param type="double" name="Parent-Oz">    0.0 </param> <!-- user, m -->
    
  </param_set>

  <param_set name="External">
    <!-- should these be migrated elsewhere? -->

    <!-- from Coloma et al in EPJ C -->
    <param type="double" name="Pion-FFactor"> 0.130 </param> <!-- GeV -->

    <!-- www.nu-fit.org v5.1 w/ SK-atm data, no correlations -->
    <!-- value = 1/2 * (min + max) -->
    <param type="double" name="PMNS-Ue1"> 0.823 </param>
    <param type="double" name="PMNS-Ue2"> 0.546 </param>
    <param type="double" name="PMNS-Ue3"> 0.150 </param>
    <param type="double" name="PMNS-Um1"> 0.3715 </param>
    <param type="double" name="PMNS-Um2"> 0.599 </param>
    <param type="double" name="PMNS-Um3"> 0.697 </param>
    <param type="double" name="PMNS-Ut1"> 0.430 </param>
    <param type="double" name="PMNS-Ut2"> 0.570 </param>
    <param type="double" name="PMNS-Ut3"> 0.692 </param>
  </param_set>

</common_NHL_list>
